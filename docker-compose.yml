version: '2'

networks:
  actchain:

services:

  orderer.actchain.com:
    container_name: orderer.actchain.com
    image: hyperledger/fabric-orderer:latest
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    environment:
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_LOGLEVEL=debug
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    ports:
      - 7050:7050
    volumes:
        - ./channel-artifacts:/etc/hyperledger/configtx
        #- ./config/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/actchain.com/orderers/orderer.actchain.com/:/etc/hyperledger/msp/orderer
        #- ./crypto-config/peerOrganizations/manu.actchain.com/peers/peer0.manu.actchain.com/:/etc/hyperledger/msp/peermanu
    networks:
      - actchain

  kafka0:
    container_name: kafka0
    extends:
        file: docker-compose-base.yml
        service: kafka
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=103809024
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - actchain

  kafka1:
    container_name: kafka1
    extends:
        file: docker-compose-base.yml
        service: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=103809024
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - actchain

  kafka2:
    container_name: kafka2
    extends:
        file: docker-compose-base.yml
        service: kafka
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=103809024
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - actchain

  kafka3:
    container_name: kafka3
    extends:
        file: docker-compose-base.yml
        service: kafka
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=103809024
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - actchain

  zookeeper0:
    container_name: zookeeper0
    extends:
        file: docker-compose-base.yml
        service: zookeeper
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - actchain

  zookeeper1:
    container_name: zookeeper1
    extends:
        file: docker-compose-base.yml
        service: zookeeper
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - actchain

  zookeeper2:
    container_name: zookeeper2
    extends:
        file: docker-compose-base.yml
        service: zookeeper
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - actchain
  
  ca.manu.actchain.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.manu.actchain.com
      # - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.manu.actchain.com-cert.pem
      # - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/*_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.manufacturer.actcar.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/*_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/manu.actchain.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.manu.actchain.com
    networks:
      - actchain


  peer0.manu.actchain.com:
    container_name: peer0.manu.actchain.com
    image: hyperledger/fabric-peer:latest
    environment:
      - CORE_LOGGING_LEVEL=debug
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.manu.actchain.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=manuMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.manu.actchain.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/manu.actchain.com/peers/peer0.manu.actchain.com/msp:/etc/hyperledger/msp/peer
      - ./crypto-config/peerOrganizations/manu.actchain.com/users:/etc/hyperledger/msp/users
        #- ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.actchain.com
      - couchdb0
    networks:
      - actchain

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:latest
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    #environment:
    # - COUCHDB_USER=manu
    # - COUCHDB_PASSWORD=manu
    ports:
      - 5984:5984
    environment:
      DB_URL: http://localhost:5984/member_db
    networks:
      - actchain

  ca.dealer.actchain.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.dealer.actchain.com
      #- FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.dealer.actchain.com-cert.pem
      #- FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/*_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.dealer.actcar.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/*_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/dealer.actchain.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.dealer.actchain.com
    networks:
      - actchain


  peer0.dealer.actchain.com:
    container_name: peer0.dealer.actchain.com
    image: hyperledger/fabric-peer:latest
    environment:
      - CORE_LOGGING_LEVEL=debug
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.dealer.actchain.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=dealerMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.dealer.actchain.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/dealer.actchain.com/peers/peer0.dealer.actchain.com/msp:/etc/hyperledger/msp/peer
      - ./crypto-config/peerOrganizations/dealer.actchain.com/users:/etc/hyperledger/msp/users
        #- ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.actchain.com
      - couchdb1
    networks:
      - actchain

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:latest
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    ports:
      - 6984:5984
    environment:
      DB_URL: http://localhost:6984/member_db
    networks:
      - actchain

  ca.customer.actchain.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.customer.actchain.com
      #- FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.customer.actchain.com-cert.pem
      #- FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/*_sk
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.customer.actcar.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/*_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/customer.actchain.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.customer.actchain.com
    networks:
      - actchain


  peer0.customer.actchain.com:
    container_name: peer0.customer.actchain.com
    image: hyperledger/fabric-peer:latest
    environment:
      - CORE_LOGGING_LEVEL=debug
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.customer.actchain.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=customerMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.customer.actchain.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 9051:7051
      - 9053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/customer.actchain.com/peers/peer0.customer.actchain.com/msp:/etc/hyperledger/msp/peer
      - ./crypto-config/peerOrganizations/customer.actchain.com/users:/etc/hyperledger/msp/users
        #- ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.actchain.com
      - couchdb2
    networks:
      - actchain

  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb:latest
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
  # environment:
  #   - COUCHDB_USER=customer
  #   - COUCHDB_PASSWORD=customer
    ports:
      - 7984:5984
    environment:
      DB_URL: http://localhost:7984/member_db
    networks:
      - actchain  

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.manu.actchain.com:7051
      - CORE_PEER_LOCALMSPID=manuMSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/manu.actchain.com/users/Admin@manu.actchain.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./../chaincode/:/opt/gopath/src/github.com/
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
    networks:
      - actchain
    depends_on:
      - orderer.actchain.com
      - peer0.manu.actchain.com
      - couchdb0
      - peer0.dealer.actchain.com
      - couchdb1
      - peer0.customer.actchain.com
      - couchdb2
